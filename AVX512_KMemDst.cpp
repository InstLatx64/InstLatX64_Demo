#include "stdafx.h"
#include "AVX512_KMemDst.h"

//Results:
// Intel SkyLake-S 7800X           CPUID 60654
// Intel CannonLake Core i3-8121U  CPUID 60663
// Intel TigerLake Core i5-1135G7  CPUID 806C1
// Intel RocketLake Core i5-11900K CPUID A0671
// Intel AlderLake Core i9-12900K  CPUID 90672
// AMD Raphael Ryzen 9 7950X       CPUID A60F12
//https://gist.github.com/InstLatx64/c7efbc71706561706888d7aa0548c4c5

extern CPU_Props cpu_props;

using namespace std;

kmemdst_methods_memdst kmemdst[] = {
	KMEMDST_FUNCDECL0(-- SCATTER --)
	KMEMDST_FUNCDECL(VPSCATTERDD xm32{k}<-x,		vpscatterdd,			scatterdx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERDD ym32{k}<-y,		vpscatterdd,			scatterdy2y,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERDD zm32{k}<-z,		vpscatterdd,			scatterdz2z,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VPSCATTERQQ xm64{k}<-x,		vpscatterqq,			scatterqx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERQQ ym64{k}<-y,		vpscatterqq,			scatterqy2y,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERQQ zm64{k}<-z,		vpscatterqq,			scatterqz2z,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VPSCATTERQD xm64{k}<-x,		vpscatterqd,			scatterqx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERQD ym64{k}<-x,		vpscatterqd,			scatterqx2y,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERQD zm64{k}<-y,		vpscatterqd,			scatterqy2z,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VPSCATTERDQ xm32{k}<-x,		vpscatterdq,			scatterdx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERDQ xm32{k}<-y,		vpscatterdq,			scatterdy2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VPSCATTERDQ ym32{k}<-z,		vpscatterdq,			scatterdz2y,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VSCATTERDPS xm32{k}<-x,		vscatterdps,			scatterdx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERDPS ym32{k}<-y,		vscatterdps,			scatterdy2y,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERDPS zm32{k}<-z,		vscatterdps,			scatterdz2z,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VSCATTERQPD xm64{k}<-x,		vscatterqpd,			scatterqx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERQPD ym64{k}<-y,		vscatterqpd,			scatterqy2y,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERQPD zm64{k}<-z,		vscatterqpd,			scatterqz2z,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VSCATTERQPS xm64{k}<-x,		vscatterqps,			scatterqx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERQPS ym64{k}<-x,		vscatterqps,			scatterqx2y,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERQPS zm64{k}<-y,		vscatterqps,			scatterqy2z,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VSCATTERDPD xm32{k}<-x,		vscatterdpd,			scatterdx2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERDPD xm32{k}<-y,		vscatterdpd,			scatterdy2x,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VSCATTERDPD ym32{k}<-z,		vscatterdpd,			scatterdz2y,	ISA_AVX512F)

	KMEMDST_FUNCDECL0(-- MOV --)
	
	KMEMDST_FUNCDECL(VMOVD m32<-xmm,				vmovd,					xmm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVQ m64<-xmm,				vmovq,					xmm2m64,		ISA_AVX512F)

	KMEMDST_FUNCDECL({EVEX} VMOVAPS m128<-x1,		vmovaps,				evex_xmm2m128,	ISA_AVX512F)
	KMEMDST_FUNCDECL({EVEX} VMOVAPS m256<-y1,		vmovaps,				evex_ymm2m256,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVAPS m512<-z1,				vmovaps,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL({EVEX} VMOVAPD m128<-x1,		vmovapd,				evex_xmm2m128,	ISA_AVX512F)
	KMEMDST_FUNCDECL({EVEX} VMOVAPD m256<-y1,		vmovapd,				evex_ymm2m256,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVAPD m512<-z1,				vmovapd,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL({EVEX} VMOVUPS m128<-x1,		vmovups,				evex_xmm2m128,	ISA_AVX512F)
	KMEMDST_FUNCDECL({EVEX} VMOVUPS m256<-y1,		vmovups,				evex_ymm2m256,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPS m512<-z1,				vmovups,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL({EVEX} VMOVUPD m128<-x1,		vmovupd,				evex_xmm2m128,	ISA_AVX512F)
	KMEMDST_FUNCDECL({EVEX} VMOVUPD m256<-y1,		vmovupd,				evex_ymm2m256,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPD m512<-z1,				vmovupd,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA32 m128<-x1,			vmovdqa32,				xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA32 m256<-y1,			vmovdqa32,				ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA32 m512<-z1,			vmovdqa32,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA64 m128<-x1,			vmovdqa64,				xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA64 m256<-y1,			vmovdqa64,				ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA64 m512<-z1,			vmovdqa64,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU8 m128<-x1,				vmovdqu8,				xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU8 m256<-y1,				vmovdqu8,				ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU8 m512<-z1,				vmovdqu8,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU16 m128<-x1,			vmovdqu16,				xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU16 m256<-y1,			vmovdqu16,				ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU16 m512<-z1,			vmovdqu16,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU32 m128<-x1,			vmovdqu32,				xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU32 m256<-y1,			vmovdqu32,				ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU32 m512<-z1,			vmovdqu32,				zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU64 m128<-x1,			vmovdqu64,				xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU64 m256<-y1,			vmovdqu64,				ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU64 m512<-z1,			vmovdqu64,				zmm2m512,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VMOVAPS m128{k}<-x1,			vmovaps,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVAPS m256{k}<-y1,			vmovaps,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVAPS m512{k}<-z1,			vmovaps,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVAPD m128{k}<-x1,			vmovapd,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVAPD m256{k}<-y1,			vmovapd,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVAPD m512{k}<-z1,			vmovapd,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPS m128{k}<-x1,			vmovups,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPS m256{k}<-y1,			vmovups,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPS m512{k}<-z1,			vmovups,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPD m128{k}<-x1,			vmovupd,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPD m256{k}<-y1,			vmovupd,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVUPD m512{k}<-z1,			vmovupd,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA32 m128{k}<-x1,			vmovdqa32,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA32 m256{k}<-y1,			vmovdqa32,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA32 m512{k}<-z1,			vmovdqa32,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA64 m128{k}<-x1,			vmovdqa64,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA64 m256{k}<-y1,			vmovdqa64,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQA64 m512{k}<-z1,			vmovdqa64,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU8 m128{k}<-x1,			vmovdqu8,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU8 m256{k}<-y1,			vmovdqu8,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU8 m512{k}<-z1,			vmovdqu8,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU16 m128{k}<-x1,			vmovdqu16,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU16 m256{k}<-y1,			vmovdqu16,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU16 m512{k}<-z1,			vmovdqu16,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU32 m128{k}<-x1,			vmovdqu32,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU32 m256{k}<-y1,			vmovdqu32,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU32 m512{k}<-z1,			vmovdqu32,				zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU64 m128{k}<-x1,			vmovdqu64,				xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU64 m256{k}<-y1,			vmovdqu64,				ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VMOVDQU64 m512{k}<-z1,			vmovdqu64,				zmm2km512,		ISA_AVX512F)

	//KMEMDST_FUNCDECL(VMOVAPS x<-x1,				vmovaps,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVAPS y<-y1,				vmovaps,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVAPS z<-z1,				vmovaps,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVAPD x<-x1,				vmovapd,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVAPD y<-y1,				vmovapd,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVAPD z<-z1,				vmovapd,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVUPS x<-x1,				vmovups,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVUPS y<-y1,				vmovups,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVUPS z<-z1,				vmovups,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVUPD x<-x1,				vmovupd,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVUPD y<-y1,				vmovupd,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVUPD z<-z1,				vmovupd,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQA32,					vmovdqa32,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQA32,					vmovdqa32,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQA32,					vmovdqa32,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQA64,					vmovdqa64,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQA64,					vmovdqa64,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQA64,					vmovdqa64,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU8,					vmovdqu8,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU8,					vmovdqu8,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU8,					vmovdqu8,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU16,					vmovdqu16,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU16,					vmovdqu16,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU16,					vmovdqu16,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU32,					vmovdqu32,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU32,					vmovdqu32,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU32,					vmovdqu32,				zmm2zkm512,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU64,					vmovdqu64,				xmm2zkm128,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU64,					vmovdqu64,				ymm2zkm256,		ISA_AVX512F)
	//KMEMDST_FUNCDECL(VMOVDQU64,					vmovdqu64,				zmm2zkm512,		ISA_AVX512F)
	KMEMDST_FUNCDECL0(-- EXTRACT --)
	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128<-y 0,		vextractf32x4,			ymmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128<-z 0,		vextractf32x4,			zmmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128<-y 0,		vextracti32x4,			ymmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128<-z 0,		vextracti32x4,			zmmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128<-y 0,		vextractf64x2,			ymmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128<-z 0,		vextractf64x2,			zmmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128<-y 0,		vextracti64x2,			ymmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128<-z 0,		vextracti64x2,			zmmi02m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X8 m256<-z 0,		vextractf32x8,			zmmi02m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X8 m256<-z 0,		vextracti32x8,			zmmi02m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X4 m256<-z 0,		vextractf64x4,			zmmi02m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X4 m256<-z 0,		vextracti64x4,			zmmi02m256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128<-y i,		vextractf32x4,			ymmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128<-z i,		vextractf32x4,			zmmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128<-y i,		vextracti32x4,			ymmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128<-z i,		vextracti32x4,			zmmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128<-y i,		vextractf64x2,			ymmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128<-z i,		vextractf64x2,			zmmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128<-y i,		vextracti64x2,			ymmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128<-z i,		vextracti64x2,			zmmi2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X8 m256<-z i,		vextractf32x8,			zmmi2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X8 m256<-z i,		vextracti32x8,			zmmi2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X4 m256<-z i,		vextractf64x4,			zmmi2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X4 m256<-z i,		vextracti64x4,			zmmi2m256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128{k}<-y 0,	vextractf32x4,			ymmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128{k}<-z 0,	vextractf32x4,			zmmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128{k}<-y 0,	vextracti32x4,			ymmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128{k}<-z 0,	vextracti32x4,			zmmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128{k}<-y 0,	vextractf64x2,			ymmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128{k}<-z 0,	vextractf64x2,			zmmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128{k}<-y 0,	vextracti64x2,			ymmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128{k}<-z 0,	vextracti64x2,			zmmi02km128,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X8 m256{k}<-z 0,	vextractf32x8,			zmmi02km256,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X8 m256{k}<-z 0,	vextracti32x8,			zmmi02km256,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X4 m256{k}<-z 0,	vextractf64x4,			zmmi02km256,	ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X4 m256{k}<-z 0,	vextracti64x4,			zmmi02km256,	ISA_AVX512F)

	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128{k}<-y i,	vextractf32x4,			ymmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X4 m128{k}<-z i,	vextractf32x4,			zmmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128{k}<-y i,	vextracti32x4,			ymmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X4 m128{k}<-z i,	vextracti32x4,			zmmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128{k}<-y i,	vextractf64x2,			ymmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X2 m128{k}<-z i,	vextractf64x2,			zmmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128{k}<-y i,	vextracti64x2,			ymmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X2 m128{k}<-z i,	vextracti64x2,			zmmi2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF32X8 m256{k}<-z i,	vextractf32x8,			zmmi2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI32X8 m256{k}<-z i,	vextracti32x8,			zmmi2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTF64X4 m256{k}<-z i,	vextractf64x4,			zmmi2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VEXTRACTI64X4 m256{k}<-z i,	vextracti64x4,			zmmi2km256,		ISA_AVX512F)

	KMEMDST_FUNCDECL0(-- DEMOTE --)
	KMEMDST_FUNCDECL(VPMOVWB m64<-x1,				vpmovwb,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVWB m128<-y1,				vpmovwb,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVWB m256<-z1,				vpmovwb,				zmm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDB m32<-x1,				vpmovdb,				xmm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDB m64<-y1,				vpmovdb,				ymm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDB m128<-z1,				vpmovdb,				zmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDW m64<-x1,				vpmovdw,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDW m128<-y1,				vpmovdw,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDW m256<-z1,				vpmovdw,				zmm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQB m16<-x1,				vpmovqb,				xmm2m16,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQB m32<-y1,				vpmovqb,				ymm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQB m64<-z1,				vpmovqb,				zmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQW m32<-x1,				vpmovqw,				xmm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQW m64<-y1,				vpmovqw,				ymm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQW m128<-z1,				vpmovqw,				zmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQD m64<-x1,				vpmovqd,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQD m128<-y1,				vpmovqd,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQD m256<-z1,				vpmovqd,				zmm2m256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPMOVSWB m64<-x1,				vpmovswb,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSWB m128<-y1,				vpmovswb,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSWB m256<-z1,				vpmovswb,				zmm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDB m32<-x1,				vpmovsdb,				xmm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDB m64<-y1,				vpmovsdb,				ymm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDB m128<-z1,				vpmovsdb,				zmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDW m64<-x1,				vpmovsdw,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDW m128<-y1,				vpmovsdw,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDW m256<-z1,				vpmovsdw,				zmm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQB m16<-x1,				vpmovsqb,				xmm2m16,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQB m32<-y1,				vpmovsqb,				ymm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQB m64<-z1,				vpmovsqb,				zmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQW m32<-x1,				vpmovsqw,				xmm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQW m64<-y1,				vpmovsqw,				ymm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQW m128<-z1,				vpmovsqw,				zmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQD m64<-x1,				vpmovsqd,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQD m128<-y1,				vpmovsqd,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQD m256<-z1,				vpmovsqd,				zmm2m256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPMOVUSWB m64<-x1,				vpmovuswb,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSWB m128<-y1,			vpmovuswb,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSWB m256<-z1,			vpmovuswb,				zmm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDB m32<-x1,				vpmovusdb,				xmm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDB m64<-y1,				vpmovusdb,				ymm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDB m128<-z1,			vpmovusdb,				zmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDW m64<-x1,				vpmovusdw,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDW m128<-y1,			vpmovusdw,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDW m256<-z1,			vpmovusdw,				zmm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQB m16<-x1,				vpmovusqb,				xmm2m16,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQB m32<-y1,				vpmovusqb,				ymm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQB m64<-z1,				vpmovusqb,				zmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQW m32<-x1,				vpmovusqw,				xmm2m32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQW m64<-y1,				vpmovusqw,				ymm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQW m128<-z1,			vpmovusqw,				zmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQD m64<-x1,				vpmovusqd,				xmm2m64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQD m128<-y1,			vpmovusqd,				ymm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQD m256<-z1,			vpmovusqd,				zmm2m256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPMOVWB m64{k}<-x1,			vpmovwb,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVWB m128{k}<-y1,			vpmovwb,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVWB m256{k}<-z1,			vpmovwb,				zmm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDB m32{k}<-x1,			vpmovdb,				xmm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDB m64{k}<-y1,			vpmovdb,				ymm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDB m128{k}<-z1,			vpmovdb,				zmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDW m64{k}<-x1,			vpmovdw,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDW m128{k}<-y1,			vpmovdw,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVDW m256{k}<-z1,			vpmovdw,				zmm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQB m16{k}<-x1,			vpmovqb,				xmm2km16,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQB m32{k}<-y1,			vpmovqb,				ymm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQB m64{k}<-z1,			vpmovqb,				zmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQW m32{k}<-x1,			vpmovqw,				xmm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQW m64{k}<-y1,			vpmovqw,				ymm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQW m128{k}<-z1,			vpmovqw,				zmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQD m64{k}<-x1,			vpmovqd,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQD m128{k}<-y1,			vpmovqd,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVQD m256{k}<-z1,			vpmovqd,				zmm2km256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPMOVSWB m64{k}<-x1,			vpmovswb,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSWB m128{k}<-y1,			vpmovswb,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSWB m256{k}<-z1,			vpmovswb,				zmm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDB m32{k}<-x1,			vpmovsdb,				xmm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDB m64{k}<-y1,			vpmovsdb,				ymm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDB m128{k}<-z1,			vpmovsdb,				zmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDW m64{k}<-x1,			vpmovsdw,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDW m128{k}<-y1,			vpmovsdw,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSDW m256{k}<-z1,			vpmovsdw,				zmm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQB m16{k}<-x1,			vpmovsqb,				xmm2km16,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQB m32{k}<-y1,			vpmovsqb,				ymm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQB m64{k}<-z1,			vpmovsqb,				zmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQW m32{k}<-x1,			vpmovsqw,				xmm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQW m64{k}<-y1,			vpmovsqw,				ymm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQW m128{k}<-z1,			vpmovsqw,				zmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQD m64{k}<-x1,			vpmovsqd,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQD m128{k}<-y1,			vpmovsqd,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVSQD m256{k}<-z1,			vpmovsqd,				zmm2km256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPMOVUSWB m64{k}<-x1,			vpmovuswb,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSWB m128{k}<-y1,			vpmovuswb,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSWB m256{k}<-z1,			vpmovuswb,				zmm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDB m32{k}<-x1,			vpmovusdb,				xmm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDB m64{k}<-y1,			vpmovusdb,				ymm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDB m128{k}<-z1,			vpmovusdb,				zmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDW m64{k}<-x1,			vpmovusdw,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDW m128{k}<-y1,			vpmovusdw,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSDW m256{k}<-z1,			vpmovusdw,				zmm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQB m16{k}<-x1,			vpmovusqb,				xmm2km16,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQB m32{k}<-y1,			vpmovusqb,				ymm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQB m64{k}<-z1,			vpmovusqb,				zmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQW m32{k}<-x1,			vpmovusqw,				xmm2km32,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQW m64{k}<-y1,			vpmovusqw,				ymm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQW m128{k}<-z1,			vpmovusqw,				zmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQD m64{k}<-x1,			vpmovusqd,				xmm2km64,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQD m128{k}<-y1,			vpmovusqd,				ymm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPMOVUSQD m256{k}<-z1,			vpmovusqd,				zmm2km256,		ISA_AVX512F)
	
	KMEMDST_FUNCDECL0(-- COMPRESS --)
	KMEMDST_FUNCDECL(VPCOMPRESSB m128<-x1,			vpcompressb,			xmm2m128,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSW m128<-x1,			vpcompressw,			xmm2m128,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSD m128<-x1,			vpcompressd,			xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPCOMPRESSQ m128<-x1,			vpcompressq,			xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPS m128<-x1,			vcompressps,			xmm2m128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPD m128<-x1,			vcompresspd,			xmm2m128,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPCOMPRESSB m256<-y1,			vpcompressb,			ymm2m256,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSW m256<-y1,			vpcompressw,			ymm2m256,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSD m256<-y1,			vpcompressd,			ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPCOMPRESSQ m256<-y1,			vpcompressq,			ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPS m256<-y1,			vcompressps,			ymm2m256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPD m256<-y1,			vcompresspd,			ymm2m256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPCOMPRESSB m512<-z1,			vpcompressb,			zmm2m512,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSW m512<-z1,			vpcompressw,			zmm2m512,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSD m512<-z1,			vpcompressd,			zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPCOMPRESSQ m512<-z1,			vpcompressq,			zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPS m512<-z1,			vcompressps,			zmm2m512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPD m512<-z1,			vcompresspd,			zmm2m512,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPCOMPRESSB m128{k}<-x1,		vpcompressb,			xmm2km128,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSW m128{k}<-x1,		vpcompressw,			xmm2km128,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSD m128{k}<-x1,		vpcompressd,			xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPCOMPRESSQ m128{k}<-x1,		vpcompressq,			xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPS m128{k}<-x1,		vcompressps,			xmm2km128,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPD m128{k}<-x1,		vcompresspd,			xmm2km128,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPCOMPRESSB m256{k}<-y1,		vpcompressb,			ymm2km256,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSW m256{k}<-y1,		vpcompressw,			ymm2km256,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSD m256{k}<-y1,		vpcompressd,			ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPCOMPRESSQ m256{k}<-y1,		vpcompressq,			ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPS m256{k}<-y1,		vcompressps,			ymm2km256,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPD m256{k}<-y1,		vcompresspd,			ymm2km256,		ISA_AVX512F)

	KMEMDST_FUNCDECL(VPCOMPRESSB m512{k}<-z1,		vpcompressb,			zmm2km512,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSW m512{k}<-z1,		vpcompressw,			zmm2km512,		ISA_AVX512_VBMI2)
	KMEMDST_FUNCDECL(VPCOMPRESSD m512{k}<-z1,		vpcompressd,			zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VPCOMPRESSQ m512{k}<-z1,		vpcompressq,			zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPS m512{k}<-z1,		vcompressps,			zmm2km512,		ISA_AVX512F)
	KMEMDST_FUNCDECL(VCOMPRESSPD m512{k}<-z1,		vcompresspd,			zmm2km512,		ISA_AVX512F)
};

void KMemDst_Test(uint64_t testCases[], size_t tests, kmemdst_methods_memdst *insts, int index) {
	volatile unsigned __int64 minres = ULONG_MAX;
	if (insts[index].funcs[0] != nullptr) {
		cout << setw(4) << right << dec << setfill(' ') << index << '|';
		cout << setw(36) << left << insts[index].name << '|' << right;
		for (int t = 0; t < tests; t++) {
			minres = ULONG_MAX;
			(insts[index].funcs[0])(testCases[t]);
			for (int rep = 0; rep < KMEMDST_REPEATS; rep++) {
				minres = min(minres, (insts[index].funcs[0])(testCases[t]));
			}
			cout << setw(16) << right << minres << '|';
		}
	} else {
		cout << "    |";
		cout << setw(36) << left << insts[index].name << '|' << right;
		for (int t = 0; t < tests; t++) {
			cout << hex <<  setw(16) << setfill('0') << right << testCases[t] << '|';
		}
		cout << dec <<  setw(16) << setfill(' ');
	}
	cout << endl;
};

void AVX512_KMemDst_Demo(void) {
	SetThread(3);

	uint64_t testCases[] = {
		0x0ECA8642FDB97531ULL,
		0x5555555555555555ULL,
		0x0ULL,
		0x1ULL,
		0x3ULL,
		0xFULL,
		0xFFULL,
		0xFFFFULL,
		0XFFFFFFFFULL,
		0XFFFFFFFFFFFFFFFFULL,
	};

	for (int b = 0; b < sizeof(kmemdst) / sizeof(kmemdst_methods_memdst); b++) {
		if (cpu_props.IsFeat(kmemdst[b].isa))
			KMemDst_Test(testCases, sizeof(testCases) / sizeof(uint64_t), kmemdst, b);
	}
}

